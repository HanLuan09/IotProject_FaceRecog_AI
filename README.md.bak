# FaceRecog
- Nhận diện khuôn mặt khá chuẩn xác bằng MTCNN và Facenet!
- Chạy trên Tensorflow 2.x

### 1. Khái niệm
- MTCNN là viết tắt của Multi-task Cascaded Convolutional Networks. Nó là bao gồm 3 mạng CNN xếp chồng và đồng thời hoạt động khi detect khuôn mặt. Mỗi mạng có cấu trúc khác nhau và đảm nhiệm vai trò khác nhau trong task. Đầu ra của MTCNN là vị trí khuôn mặt và các điểm trên mặt như: mắt, mũi, miệng…
- Facenet là của ông Google giới thiệu năm 2015, và mỗi ảnh là 1 vector 128 features cho 1 khuôn mặt. Sau đó dùng SVM để phân nhóm các vector đó vào các nhóm để biết vector đó là mặt của ai.
<img src="https://image.slidesharecdn.com/fasterthanreal-timefacedetection-171018202250/95/faster-than-realtime-face-detection-67-638.jpg?cb=1508358262">

### 2. Chuẩn bị dữ liệu

##### 2.1 import các thư viện cần thiết

- Chạy lệnh sau ở thư mục gốc: 
`
pip install -r requirements.txt
`

##### 2.2 Chuẩn bị ảnh khuôn mặt để train

- Bây giờ các bạn sưu tầm ảnh của 2 người trở lên, mỗi người khoảng 10 tấm hình rõ mặt. Ví dụ 2 người tên là NguyenVanA và LeThiB nhé. Các bạn tạo 02 thư mục NguyenVanA và LeThiB trong thư mục raw và copy ảnh của 2 người vào riêng 2 thư mục đó, ảnh của ai vào thư mục của người đó.

##### 2.3 Tiền xử lý dữ liệu để cắt khuôn mặt từ ảnh gốc

- Với chỗ ảnh mà bạn đã sưu tầm bên trên, có thể là ảnh cả người, bây giờ chúng ta sẽ cắt riêng khuôn mặt ra để train
- Chạy lệnh sau ở thư mục gốc:
`
python src/align_dataset_mtcnn.py  Dataset/FaceData/raw Dataset/FaceData/processed --image_size 160 --margin 32  --random_order --gpu_memory_fraction 0.25
`

##### 2.4 Tải dữ liệu pretrain của Facenet về máy:

- Tải weights pretrain [Tại đây](https://drive.google.com/file/d/1EXPBSXwTaqrSC0OhUdXNmKSh9qJUQ55-/view)

- Sau khi tải xong về, copy toàn bộ file tải về vào thư mục Models
<img src="https://lh3.googleusercontent.com/XTjO0wy3hr6CAnbp_t0dcqNnURaeEPg5Xdr8uwilMhy38t8ef5gmpaIRsNiLHU4nfi2S3dfpcb01Ga4Vmz3V_fF0mGHQN8kDF5SMEeZ_s3PXBNseQVKReOfTHr8xBcj3eWKoMDjUDPhucGiO-MA2s-UxlykRSoy4l99aSJInbzqwMmRRJUHUvDBaa8Mjsjett8o6dV5PN86okTGRcf4vPgXGqO0o5zwGWLGYY_SISXoKB7D2W0YiwekxdTVUKI3NSCAp0RPWtDbvL8SgbkJVcyaaeOOmiIfhPminsjKeCxuZ1G51f39QFTHWE7UJFV-3gGacdcSrBmvTFpyUbUVU2og8IZ_tpitNeRgK681fBiEstYxXXeJG6-y9m6zfjsx0GYaunYj5EmLS71myqUdtHFLOr_KyQhdy5AI4GuG_fRnzFsnCwLzZMKDYS4Gwv5o7Wnla_Smbl2zRKJcP0j0jUTL66au23XGngIZD1GhGUz1nIqWmPGEYXLl4iWgyBTTQbCqnkeuGsfWXaE31JoX7NSLqm9HDrFPwzmLRaK-fOlSVirUf2PSvlMCWbuqKTgw80-eb3Vb4e_Q2ICAH1Ajs26tgqZoEfsT_58GAg3NYQGoWMfJg_By5bewBuiyPpnIjl4iPwF1yUPdZxcfiAhNX4pd4-HkHHfwaPIdvq_UKzo8QuH3x1g3QZe4fS-QC--NEAQu8qiUyMeVwhrKc5jBz7_DWaJJTXjF6Su1d1qYigTp6zxaz=w920-h260-no">

### 3. Tiến hành train model để nhận diện khuôn mặt

- Ở thư mục gốc chạy lệnh:
`
python src/classifier.py TRAIN Dataset/FaceData/processed Models/20180402-114759.pb Models/facemodel.pkl --batch_size 1000
`
-Khi nào màn hình hiện lên chữ “Saved classifier model to file “Models/facemodel.pkl” là done!

